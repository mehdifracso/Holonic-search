/** 
 * 
 */
import io.sarl.core.AgentKilled
import io.sarl.core.AgentSpawned
import io.sarl.core.ContextJoined
import io.sarl.core.ContextLeft
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.MemberJoined
import io.sarl.core.MemberLeft
import io.sarl.core.ParticipantJoined
import io.sarl.core.ParticipantLeft
import io.sarl.core.SpaceCreated
import io.sarl.core.SpaceDestroyed
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Lifecycle

/** 
 * @author Mehdi
 * 
 */
agent SearchManager {
	uses Logging, DefaultContextInteractions, Lifecycle

	on Initialize {
		loggingName = "Search Manager"
		info("Search Manager has started.")
		
		emit(new SearchRequest("C:\\temp","random"))
	}

	on Destroy {
		info("Search Manager has stopped.")
	}

	on ContextLeft {
		// After the last search agent is destroyed, the search manager should kill itself
		killMe
	}

}
